name: "Terraform CI CD"

on: [push,workflow_dispatch]

env:
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}

jobs:
  Terraform_plan:
    name: "Terraform Plan & Validate"
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

         # Install the selected version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
        
        # Run a terraform fmt to check syntax
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      # Run a terraform validate
      - name: Terraform Validate
        id: validate
        run: terraform validate  -no-color

      # Run a terraform plan
      - name: Terraform plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -no-color -input=false -out=tfplan
        
  Terraform_Deploy:
    name: "Terraform Validate and Apply"
    runs-on: ubuntu-latest
    environment: Development
    defaults:
     run:
      shell: bash
      # We keep Terraform files in the terraform directory.
      working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
        # Install the selected version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}
    
        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
           
        # Run a terraform validate
      - name: Terraform Validate
        id: validate
        run: terraform validate  -no-color        
           
        # Run a terraform apply
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply  
